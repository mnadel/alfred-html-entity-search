<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>org.nadel.alfred.html-entity-search</string>
	<key>connections</key>
	<dict>
		<key>04532823-FD9F-404F-91F7-AC5A0494D834</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E1BB501E-2B3C-4714-8B27-69139E1621D3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Michael Nadel</string>
	<key>description</key>
	<string></string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>HTML Entity Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>html</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Searching...</string>
				<key>script</key>
				<string>#!/usr/bin/python3

import csv
import sys
import html

def _xmlify(matches):
    xml = '&lt;?xml version="1.0" encoding="utf-8"?&gt;'
    xml += '&lt;items&gt;'
    for match in matches:
        xml += '&lt;item valid="yes"&gt;'
        xml += '&lt;title&gt;{}&lt;/title&gt;&lt;subtitle&gt;{}&lt;/subtitle&gt;&lt;arg&gt;{}&lt;/arg&gt;'.format(*match)
        xml += '&lt;/item&gt;'
    xml += '&lt;/items&gt;'
    return xml

def _matches(queries, desc, entity):
    if len(queries) == 1:
        return queries[0] in desc or queries[0] in entity
    else:
        for query in queries:
            if query not in desc or query not in entity:
                return False
        return True

queries = sys.argv[1].strip().lower().split(" ")
matches = []

with open("entities.db", "r") as f:
    for row in csv.reader(f):
        desc, entity = row

        if _matches(queries, desc, entity):
            htm = html.unescape(entity.split(" ")[0])
            matches.append((htm, desc, htm))

if len(matches) &gt; 0:
    print(_xmlify(matches))
else:
    sys.exit(1)
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>search</string>
				<key>subtext</key>
				<string>Search entities by name</string>
				<key>title</key>
				<string>Find HTML Entities</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>04532823-FD9F-404F-91F7-AC5A0494D834</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>E1BB501E-2B3C-4714-8B27-69139E1621D3</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>04532823-FD9F-404F-91F7-AC5A0494D834</key>
		<dict>
			<key>xpos</key>
			<real>65</real>
			<key>ypos</key>
			<real>55</real>
		</dict>
		<key>E1BB501E-2B3C-4714-8B27-69139E1621D3</key>
		<dict>
			<key>xpos</key>
			<real>365</real>
			<key>ypos</key>
			<real>55</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>webaddress</key>
	<string>https://nadel.org</string>
</dict>
</plist>
